1. Downloading Sales Data
The sales data can be downloaded from the following GitHub repository:

Sales Order Data: https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

2. Creating the Sales Data Table
Create a table in Hive to store the sales data.

CREATE TABLE sales_data (
    ORDERNUMBER INT,
    QUANTITYORDERED INT,
    PRICEEACH FLOAT,
    ORDERLINENUMBER INT,
    SALES FLOAT,
    STATUS STRING,
    QTR_ID INT,
    MONTH_ID INT,
    YEAR_ID INT,
    PRODUCTLINE STRING,
    MSRP INT,
    PRODUCTCODE STRING,
    PHONE STRING,
    CITY STRING,
    STATE STRING,
    POSTALCODE STRING,
    COUNTRY STRING,
    TERRITORY STRING,
    CONTACTLASTNAME STRING,
    CONTACTFIRSTNAME STRING,
    DEALSIZE STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES("skip.header.line.count"="1");

3. Loading Data into the Table

Use the following command to load data into the sales_data table:
LOAD DATA LOCAL INPATH 'file:///tmp/hive_class/sales_order_data.csv' INTO TABLE sales_data;

4. Creating the ORC Format Table
To optimize storage and querying, create a table in ORC format.
CREATE TABLE sales_data_orc (
    ORDERNUMBER INT,
    QUANTITYORDERED INT,
    PRICEEACH FLOAT,
    ORDERLINENUMBER INT,
    SALES FLOAT,
    STATUS STRING,
    QTR_ID INT,
    MONTH_ID INT,
    YEAR_ID INT,
    PRODUCTLINE STRING,
    MSRP INT,
    PRODUCTCODE STRING,
    PHONE STRING,
    CITY STRING,
    STATE STRING,
    POSTALCODE STRING,
    COUNTRY STRING,
    TERRITORY STRING,
    CONTACTLASTNAME STRING,
    CONTACTFIRSTNAME STRING,
    DEALSIZE STRING
)
STORED AS ORC;

5. Copying Data to ORC Table

To transfer data from sales_data to sales_data_orc, use:
INSERT OVERWRITE TABLE sales_data_orc SELECT * FROM sales_data;

6. Querying Data

To analyze total sales per year:
SELECT year_id, SUM(sales) AS total_sales FROM sales_data_orc GROUP BY year_id;

7. Configuring Reducers in Hive
Hive allows users to configure reducers to optimize performance.

- Adjusting Reducer Load:
  SET hive.exec.reducers.bytes.per.reducer=<number>;
- Limiting the Maximum Number of Reducers:
  SET hive.exec.reducers.max=<number>;
- Setting a Fixed Number of Reducers:
  SET mapreduce.job.reduces=<number>;
Example:
SET mapreduce.job.reduces=3;

8. Creating a Summary Table in ORC Format

CREATE TABLE sales_year_orc
STORED AS ORC
AS
SELECT year_id, SUM(sales) AS total_sales
FROM sales_data_orc
GROUP BY year_id;

9. Impact of Reducers on File Count
After executing the above query, checking the Hive warehouse directory will reveal that the output consists of 3 files. 
This is because the number of reducers was set to 3. If set to 2, only 2 files would be created.

10. Understanding Reducer Behavior in ORDER BY and SORT BY

- ORDER BY:
  SELECT year_id FROM sales_data_orc ORDER BY year_id DESC;
  Even when multiple reducers are set, ORDER BY will always use a single reducer because it performs a global sort.

- SORT BY:
  SELECT year_id FROM sales_data_orc SORT BY year_id DESC;
  Unlike ORDER BY, SORT BY distributes sorting across multiple reducers. If 2 reducers are used, each will sort its portion independently. However, the final output may not be globally sorted.

